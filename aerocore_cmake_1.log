Script started on Mon 27 Jun 2016 08:04:01 AM EDT
]0;jessica@mcwiljl-ll1: ~/src/Firmwarejessica@mcwiljl-ll1:~/src/Firmware$ cd cmake/
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ ls
[0m[01;34mcmake_hexagon[0m  [01;34mconfigs[0m  [01;34mposix[0m  ros-CMakeLists.txt  [01;34mtemplates[0m  [01;34mtoolchains[0m
[01;34mcommon[0m         [01;34mnuttx[0m    [01;34mqurt[0m   [01;34mscripts[0m             [01;34mtest[0m
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ cd configs/
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/configsjessica@mcwiljl-ll1:~/src/Firmware/cmake/configs$ ls
nuttx_aerocore-v2_default.cmake
nuttx_mindpx-v2_default.cmake
nuttx_px4fmu-v1_default.cmake
nuttx_px4fmu-v2_default.cmake
nuttx_px4fmu-v2_ekf2.cmake
nuttx_px4fmu-v2_test.cmake
nuttx_px4fmu-v4_default.cmake
nuttx_px4-stm32f4discovery_default.cmake
posix_bebop_default.cmake
posix_eagle_default.cmake
posix_eagle_hil.cmake
posix_eagle_legacy_driver_default.cmake
posix_eagle_muorb.cmake
posix_excelsior_default.cmake
posix_rpi2_default.cmake
posix_rpi2_release.cmake
posix_sdflight_default.cmake
posix_sitl_broadcast.cmake
posix_sitl_default.cmake
posix_sitl_lpe.cmake
posix_sitl_replay.cmake
posix_sitl_test.cmake
qurt_eagle_default.cmake
qurt_eagle_hello.cmake
qurt_eagle_hil.cmake
qurt_eagle_legacy_driver_default.cmake
qurt_eagle_muorb.cmake
qurt_eagle_test.cmake
qurt_eagle_travis.cmake
qurt_excelsior_default.cmake
qurt_sdflight_default.cmake
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/configsjessica@mcwiljl-ll1:~/src/Firmware/cmake/configs$ cd ..
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ ls
[0m[01;34mcmake_hexagon[0m  [01;34mconfigs[0m  [01;34mposix[0m  ros-CMakeLists.txt  [01;34mtemplates[0m  [01;34mtoolchains[0m
[01;34mcommon[0m         [01;34mnuttx[0m    [01;34mqurt[0m   [01;34mscripts[0m             [01;34mtest[0m
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ cd ..
]0;jessica@mcwiljl-ll1: ~/src/Firmwarejessica@mcwiljl-ll1:~/src/Firmware$ ls
aerocore_cmake_1.log      [0m[01;34mintegrationtests[0m  [01;34mposix-configs[0m
[01;34mbuild_px4fmu-v2_default[0m   [01;34mlaunch[0m            README.md
[01;34mbuild_px4fmu-v4_default[0m   LICENSE.md        [01;34mROMFS[0m
[01;34mcmake[0m                     Makefile          [01;34msrc[0m
CMakeLists.txt            [01;34mmavlink[0m           template_.cproject
CONTRIBUTING.md           [01;34mmisc[0m              template_.project
[01;34mDebug[0m                     [01;34mmsg[0m               [01;34mTools[0m
[01;34mDocumentation[0m             [01;34mNuttX[0m             [01;34munittests[0m
Firmware.sublime-project  [01;34mnuttx-configs[0m     Vagrantfile
[01;34mImages[0m                    package.xml
]0;jessica@mcwiljl-ll1: ~/src/Firmwarejessica@mcwiljl-ll1:~/src/Firmware$ nano Makefile 
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6              File: Makefile                                    [3;1H(B[m############################################################################[4d#[5d# Copyright (c) 2015 - 2016 PX4 Development Team. All rights reserved.[6d#[7d# Redistribution and use in source and binary forms, with or without[8d# modification, are permitted provided that the following conditions[9d# are met:[10d#[11d# 1. Redistributions of source code must retain the above copyright[12d#    notice, this list of conditions and the following disclaimer.[13d# 2. Redistributions in binary form must reproduce the above copyright[14d#    notice, this list of conditions and the following disclaimer in[15d#    the documentation and/or other materials provided with the[16d#    distribution.[17d# 3. Neither the name PX4 nor the names of its contributors may be[18d#    used to endorse or promote products derived from this software[19d#    without specific prior written permission.[20d#[21d# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS[22;32H(B[0;7m[ Read 329 lines ][23d^G(B[m Get Help  (B[0;7m^O(B[m WriteOut  (B[0;7m^R(B[m Read File (B[0;7m^Y(B[m Prev Page (B[0;7m^K(B[m Cut Text  (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^J(B[m Justify   (B[0;7m^W(B[m Where Is  (B[0;7m^V(B[m Next Page (B[0;7m^U(B[m UnCut Text(B[0;7m^T(B[m To Spell[3d[4d[5d[6d[7d[8d[9d[10d[11d[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;21r8[10S[1;24r[12;1H# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT[13d# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS[14d# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE[15d# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,[16d# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,[17d# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS[18d# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED[19d# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT[20d# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN[21d# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE[12d[13d[14d[15d[16d[17d[18d[22d[K[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1H# POSSIBILITY OF SUCH DAMAGE.[13d#[14d############################################################################[16d# Enforce the presence of the GIT repository[17d#[18d# We depend on our submodules, so we have to prevent attempts to[19d# compile without it being present.[20difeq ($(wildcard .git),)[21;5H$(error YOU HAVE TO USE GIT TO DOWNLOAD THIS REPOSITORY. ABORTING.)[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1Hendif[14dCMAKE_VER := $(shell Tools/check_cmake.sh; echo $$?)[15difneq ($(CMAKE_VER),0)[16;5H$(warning Not a valid CMake version or CMake not installed.)[17;5H$(warning On Ubuntu, install or upgrade via:)[18;5H$(warning )[19;5H$(warning 3rd party PPA:)[20;5H$(warning sudo add-apt-repository ppa:george-edison55/cmake-3.x -y)[21;5H$(warning sudo apt-get update)[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;5H$(warning sudo apt-get install cmake)[13;5H$(warning )[14;5H$(warning Official website:)[15;5H$(warning wget https://cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.sh)[16;5H$(warning chmod +x cmake-3.3.2-Linux-x86_64.sh)[17;5H$(warning sudo mkdir /opt/cmake-3.3.2)[18;5H$(warning sudo ./cmake-3.3.2-Linux-x86_64.sh --prefix=/opt/cmake-3.3.2 --ex$[19;5H$(warning export PATH=/opt/cmake-3.3.2/bin:$$PATH)[20;5H$(warning )[21;5H$(error Fatal)[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1Hendif[14d# Help[15d# --------------------------------------------------------------------[16d# Don't be afraid of this makefile, it is just passing[17d# arguments to cmake to allow us to keep the wiki pages etc.[18d# that describe how to build the px4 firmware[19d# the same even when using cmake instead of make.[20d#[21d# Example usage:[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1H#[13d# make px4fmu-v2_default[13;49H(builds)[14d# make px4fmu-v2_default upload[14;41H(builds and uploads)[15d# make px4fmu-v2_default test[15;41H(builds and tests)[16d#[17d# This tells cmake to build the nuttx px4fmu-v2 default config in the[18d# directory build_nuttx_px4fmu-v2_default and then call make[19d# in that directory with the target upload.[21d#  explicity set default build target[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1Hall: px4fmu-v2_default[14d# Parsing[15d# --------------------------------------------------------------------[16d# assume 1st argument passed is the main target, the[17d# rest are arguments to pass to the makefile generated[18d# by cmake in the subdirectory[19dARGS := $(wordlist 2,$(words $(MAKECMDGOALS)),$(MAKECMDGOALS))[20dj ?= 4[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1HNINJA_BUILD := $(shell ninja --version 2>/dev/null)[13difdef NINJA_BUILD[14;5HPX4_CMAKE_GENERATOR ?= "Ninja"[15;5HPX4_MAKE = ninja[16;5HPX4_MAKE_ARGS =[17delse[19difdef SYSTEMROOT[20;9H# Windows[21;9HPX4_CMAKE_GENERATOR ?= "MSYS Makefiles"[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1Helse[13;9HPX4_CMAKE_GENERATOR ?= "Unix Makefiles"[14dendif[15dPX4_MAKE = make[16;5HPX4_MAKE_ARGS = -j$(j) --no-print-directory[17dendif[19d# Functions[20d# --------------------------------------------------------------------[21d# describe how to build a cmake config[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1Hdefine cmake-build[13d+@if [ $(PX4_CMAKE_GENERATOR) = "Ninja" ] && [ -e $(PWD)/build_$@/Makefile ]; t$[14;1H+@if [ ! -e $(PWD)/build_$@/CMakeCache.txt ]; then Tools/check_submodules.sh &&$[15;1H+@Tools/check_submodules.sh[16d+@(echo "PX4 CONFIG: $@" && cd $(PWD)/build_$@ && $(PX4_MAKE) $(PX4_MAKE_ARGS) $[17;1Hendef[19ddefine cmake-build-other[20d+@if [ $(PX4_CMAKE_GENERATOR) = "Ninja" ] && [ -e $(PWD)/build_$@/Makefile ]; t$[21;1H+@if [ ! -e $(PWD)/build_$@/CMakeCache.txt ]; then Tools/check_submodules.sh &&$[12;1H[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1H+@(cd $(PWD)/build_$@ && $(PX4_MAKE) $(PX4_MAKE_ARGS) $(ARGS))[13dendef[15d# create empty targets to avoid msgs for targets passed to cmake[16ddefine cmake-targ[17d$(1):[18;9H@#[19d.PHONY: $(1)[20dendef[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1Hdefine colorecho[13;7H@tput setaf 6[14;7H@echo $1[15;7H@tput sgr0[16dendef[18d# ADD CONFIGS HERE[19d# --------------------------------------------------------------------[20d#  Do not put any spaces between function arguments.[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1Hpx4fmu-v1_default:[13;9H$(call cmake-build,nuttx_px4fmu-v1_default)[15dpx4fmu-v2_default:[16;9H$(call cmake-build,nuttx_px4fmu-v2_default)[18dpx4fmu-v2_test:[19;9H$(call cmake-build,nuttx_px4fmu-v2_test)[21dpx4fmu-v4_default:[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;9H$(call cmake-build,nuttx_px4fmu-v4_default)[14dpx4-stm32f4discovery_default:[15;9H$(call cmake-build,nuttx_px4-stm32f4discovery_default)[17dpx4fmu-v2_ekf2:[18;9H$(call cmake-build,nuttx_px4fmu-v2_ekf2)[20dmindpx-v2_default:[21;9H$(call cmake-build,nuttx_mindpx-v2_default)[12d[13d[14d[15d[A[A[A[A[A[A[A[A[A[A[A[A[2;21r[2;1H[10T[1;24r[3;7H@tput setaf 6[4;7H@echo $1[5;7H@tput sgr0[6dendef[8d# ADD CONFIGS HERE[9d# --------------------------------------------------------------------[10d#  Do not put any spaces between function arguments.[12dpx4fmu-v1_default:[A[12d[A[1;71H(B[0;7mModified[11d(B[maerocore-v2: _default:7[12;21r8[12dM[1;24r[12;1H[12;9H$(call cmake-build,nuttx_aerocore-v2_defaut lt)7[13;22r8[13dM[1;24r[13;1H[22d(B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?                    [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No  [14G   (B[0;7m^C(B[m Cancel[K[22;62H(B[0;7mFile Name to Write: Makefile                                [23d^G(B[m Get Help[23;21H(B[0;7mM-D(B[m DOS Format[41G(B[0;7mM-A(B[m Append[23;61H(B[0;7mM-B(B[m Backup File[24d(B[0;7m^C(B[m Cancel[17G    (B[0;7mM-M(B[m Mac Format[41G(B[0;7mM-P(B[m Prepend[22;29H[23d[39;49m(B[m[J[1;71H(B[0;7m        [22;30H(B[m[1K (B[0;7m[ Wrote 331 lines ](B[m[K[24;80H[24;1H[?1049l[?1l>]0;jessica@mcwiljl-ll1: ~/src/Firmwarejessica@mcwiljl-ll1:~/src/Firmware$ cd Cm[Km[K[K[K[Kd cmake/
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ l
[0m[01;34mcmake_hexagon[0m/  [01;34mconfigs[0m/  [01;34mposix[0m/  ros-CMakeLists.txt  [01;34mtemplates[0m/  [01;34mtoolchains[0m/
[01;34mcommon[0m/         [01;34mnuttx[0m/    [01;34mqurt[0m/   [01;34mscripts[0m/            [01;34mtest[0m/
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ ls
[0m[01;34mcmake_hexagon[0m  [01;34mconfigs[0m  [01;34mposix[0m  ros-CMakeLists.txt  [01;34mtemplates[0m  [01;34mtoolchains[0m
[01;34mcommon[0m         [01;34mnuttx[0m    [01;34mqurt[0m   [01;34mscripts[0m             [01;34mtest[0m
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ cd configa[Ks
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/configsjessica@mcwiljl-ll1:~/src/Firmware/cmake/configs$ nano a[K[K[K[K[K[Kls
nuttx_aerocore-v2_default.cmake
nuttx_mindpx-v2_default.cmake
nuttx_px4fmu-v1_default.cmake
nuttx_px4fmu-v2_default.cmake
nuttx_px4fmu-v2_ekf2.cmake
nuttx_px4fmu-v2_test.cmake
nuttx_px4fmu-v4_default.cmake
nuttx_px4-stm32f4discovery_default.cmake
posix_bebop_default.cmake
posix_eagle_default.cmake
posix_eagle_hil.cmake
posix_eagle_legacy_driver_default.cmake
posix_eagle_muorb.cmake
posix_excelsior_default.cmake
posix_rpi2_default.cmake
posix_rpi2_release.cmake
posix_sdflight_default.cmake
posix_sitl_broadcast.cmake
posix_sitl_default.cmake
posix_sitl_lpe.cmake
posix_sitl_replay.cmake
posix_sitl_test.cmake
qurt_eagle_default.cmake
qurt_eagle_hello.cmake
qurt_eagle_hil.cmake
qurt_eagle_legacy_driver_default.cmake
qurt_eagle_muorb.cmake
qurt_eagle_test.cmake
qurt_eagle_travis.cmake
qurt_excelsior_default.cmake
qurt_sdflight_default.cmake
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/configsjessica@mcwiljl-ll1:~/src/Firmware/cmake/configs$ nano niut[K[K[Kt[Kuttx_aerocore-v2_default..cmake 
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6       File: nuttx_aerocore-v2_default.cmake                    [3;1H(B[minclude(nuttx/px4_impl_nuttx)[5dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolchain-arm-non$[7;1Hset(config_uavcan_num_ifaces 2)[9dset(config_module_list[10;9H#[11d# Board support modules[12;9H#[13ddrivers/device[14;9Hdrivers/stm32[15;9Hdrivers/stm32/adc[16;9Hdrivers/stm32/tone_alarm[17;9Hdrivers/led[18;9Hdrivers/px4fmu[19;9Hdrivers/px4io[20;9Hdrivers/boards/px4fmu-v2[21;9Hdrivers/rgbled[22;32H(B[0;7m[ Read 196 lines ][23d^G(B[m Get Help  (B[0;7m^O(B[m WriteOut  (B[0;7m^R(B[m Read File (B[0;7m^Y(B[m Prev Page (B[0;7m^K(B[m Cut Text  (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^J(B[m Justify   (B[0;7m^W(B[m Where Is  (B[0;7m^V(B[m Next Page (B[0;7m^U(B[m UnCut Text(B[0;7m^T(B[m To Spell[3d[2;21r[2;1HM[1;24r[1;71H(B[0;7mModified[4d(B[m[A##  Make file f[22d[K[3;13Hor the aerocore-v2_default conti  figuration.  Not=  ye     Not   Work in Proge ress.7[4;21r8[4dM[1;24r[4;1H7[4;21r8M[1;24r[5;1H#need o      M Need o  to make own file?  Or leave this one?[6;30H[7d7[7;21r8M[1;24r[8;1H#  Still same toolchain??[9d[10d7[10;21r8M[1;24r[11;1H##Gonna        Gonna leave all thi s stuff in  untill I n know wa hat it is[12;32H[13d7[13;21r8M[1;24r[14;1H[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6       File: nuttx_aerocore-v2_default.cmake          Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progress.[5d# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolchain-arm-non[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m WriteOut  (B[0;7m^R(B[m Read File (B[0;7m^Y(B[m Prev Page (B[0;7m^K(B[m Cut Text  (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^J(B[m Justify   (B[0;7m^W(B[m Where Is  (B[0;7m^V(B[m Next Page (B[0;7m^U(B[m UnCut Text(B[0;7m^T(B[m To Spell[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6       File: nuttx_aerocore-v2_default.cmake          Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progress.[5d# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolchain-arm-non[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;23H(B[0;7mFile: nuttx_aerocore-v2_default.cmake [1;70HModified [9d(B[m$[23;1H(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m WriteOut  (B[0;7m^R(B[m Read File (B[0;7m^Y(B[m Prev Page (B[0;7m^K(B[m Cut Text  (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^J(B[m Justify   (B[0;7m^W(B[m Where Is  (B[0;7m^V(B[m Next Page (B[0;7m^U(B[m UnCut Text(B[0;7m^T(B[m To Spell[14d[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6      File: nuttx_aerocore-v2_default.cmake          Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progress.[5d# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolchain-arm-no[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m WriteOut  (B[0;7m^R(B[m Read File (B[0;7m^Y(B[m Prev Page (B[0;7m^K(B[m Cut Text  (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^J(B[m Justify   (B[0;7m^W(B[m Where Is  (B[0;7m^V(B[m Next Page (B[0;7m^U(B[m UnCut Text(B[0;7m^T(B[m To Spell[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6      File: nuttx_aerocore-v2_default.cmake          Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progress.[5d# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolchain-arm-no[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;69H(B[0;7mModified [9d(B[m$[23;1H(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m WriteOut  (B[0;7m^R(B[m Read File (B[0;7m^Y(B[m Prev Page (B[0;7m^K(B[m Cut Text  (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit[14G(B[0;7m^J(B[m Justify   (B[0;7m^W(B[m Where Is  (B[0;7m^V(B[m Next Page (B[0;7m^U(B[m UnCut Text(B[0;7m^T(B[m To Spell[14d[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6      File: nuttx_aerocore-v2_default.cmake         Modifi[3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progress.[5d# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolchain-ar[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Help  (B[0;7m^O(B[m WriteOut  (B[0;7m^R(B[m Read File (B[0;7m^Y(B[m Prev Page (B[0;7m^K(B[m Cut Text  (B[0;7m^C(B[m Cur Po[24;1H(B[0;7m^X(B[m Exit[14G(B[0;7m^J(B[m Justify   (B[0;7m^W(B[m Where Is  (B[0;7m^V(B[m Next Page (B[0;7m^U(B[m UnCut Text(B[0;7m^T(B[m To Sp[?7le[?7h[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6      File: nuttx_aerocore-v2_default.cmake         Modifi[3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progress.[5d# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolchain-ar[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;22H(B[0;7mFile: nuttx_aerocore-v2_default.cmake      Modified  [9;74H(B[m$[23;1H(B[0;7m^G(B[m Get Help (B[0;7m^O(B[m WriteOut (B[0;7m^R(B[m Read File(B[0;7m^Y(B[m Prev Page(B[0;7m^K(B[m Cut Text (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit     (B[0;7m^J(B[m Justify  (B[0;7m^W(B[m Where Is (B[0;7m^V(B[m Next Page(B[0;7m^U(B[m UnCut Tex(B[0;7m^T(B[m To Spell[14d[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6     File: nuttx_aerocore-v2_default.cmake      Modifie[3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progress[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolchain[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Help (B[0;7m^O(B[m WriteOut (B[0;7m^R(B[m Read File(B[0;7m^Y(B[m Prev Page(B[0;7m^K(B[m Cut Text (B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit     (B[0;7m^J(B[m Justify  (B[0;7m^W(B[m Where Is (B[0;7m^V(B[m Next Page(B[0;7m^U(B[m UnCut Tex(B[0;7m^T(B[m To Spel[?7ll[?7h[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6     File: nuttx_aerocore-v2_default.cmake      Modifie[3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progress[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolchain[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;21H(B[0;7mFile: nuttx_aerocore-v2_default.cmake    Modified  [3;71H(B[m$[9;71H$[23;1H(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[14d[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6    File: nuttx_aerocore-v2_default.cmake    Modified[3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progre[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolcha[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6    File: nuttx_aerocore-v2_default.cmake    Modified[3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progre[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolcha[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;20H(B[0;7mFile: nuttx_aerocore-v2_default.cmake   Modified  [3;69H(B[m$[9;69H$[23;1H(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[14d[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6   File: nuttx_aerocore-v2_default.cmake   Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progr[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolch[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6   File: nuttx_aerocore-v2_default.cmake   Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Progr[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolch[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;59H(B[0;7mModified [3d(B[m$[9;68H$[23;1H(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[14d[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6   File: nuttx_aerocore-v2_default.cmake  Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Prog[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolc[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6   File: nuttx_aerocore-v2_default.cmake  Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Prog[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Toolc[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;19H(B[0;7mFile: nuttx_aerocore-v2_default.cmake  Modified [3d(B[m$[9;67H$[23;1H(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[14d[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6  File: nuttx_aerocore-v2_default.cmake  Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Pro[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Tool[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spel[?7ll[?7h[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6  File: nuttx_aerocore-v2_default.cmake  Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Pro[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Tool[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;57H(B[0;7mModified [3d(B[m$[9;66H$[23;1H(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spel[?7ll[?7h[14d[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6  File: nuttx_aerocore-v2_default.cmake Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Pr[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Too[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24;1H(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spe[?7ll[?7h[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6  File: nuttx_aerocore-v2_default.cmake Modified [3;1H(B[m# Makefile for the aerocore-v2_default configuration.  Work in Pr[5;1H# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Too[11;1H# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;18H(B[0;7mFile: ...tx_aerocore-v2_default.cmake Modified [3d(B[m$[9;65H$[23;1H(B[0;7m^G(B[m Get Hel(B[0;7m^O(B[m WriteOu(B[0;7m^R(B[m Read Fi(B[0;7m^Y(B[m Prev Pa(B[0;7m^K(B[m Cut Tex(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit   (B[0;7m^J(B[m Justify(B[0;7m^W(B[m Where I(B[0;7m^V(B[m Next Pa(B[0;7m^U(B[m UnCut T(B[0;7m^T(B[m To Spell[14d[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6 File: ...tx_aerocore-v2_default.cmake Modified  [3d(B[m# Makefile for the aerocore-v2_default configuration.  Work in P$[5d# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/To$[11d# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Hel(B[0;7m^O(B[m WriteOu(B[0;7m^R(B[m Read Fi(B[0;7m^Y(B[m Prev Pa(B[0;7m^K(B[m Cut Tex(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit   (B[0;7m^J(B[m Justify(B[0;7m^W(B[m Where I(B[0;7m^V(B[m Next Pa(B[0;7m^U(B[m UnCut T(B[0;7m^T(B[m To Spell[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6 File: ...tx_aerocore-v2_default.cmake Modified  [3d(B[m# Makefile for the aerocore-v2_default configuration.  Work in P$[5d# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/To$[11d# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;18H(B[0;7m File: nuttx_aerocore-v2_default.cmake Modified  [3;65H(B[mr$[9;65Ho$[23;1H(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spel[?7ll[?7h[14d[24;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6  File: nuttx_aerocore-v2_default.cmake Modified  [3d(B[m# Makefile for the aerocore-v2_default configuration.  Work in Pr$[5d# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Too$[11d# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[14d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6  File: nuttx_aerocore-v2_default.cmake Modified  [3d(B[m# Makefile for the aerocore-v2_default configuration.  Work in Pr$[5d# Need to make own file?  Or leave this one?[6dinclude(nuttx/px4_impl_nuttx)[8d# Still same toolchain??[9dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Too$[11d# Gonna leave all this stuff untill I know what it is[12dset(config_uavcan_num_ifaces 2)[15dset(config_module_list[16;9H#[17d# Board support modules[18;9H#[19ddrivers/device[20;9Hdrivers/stm32[21;9Hdrivers/stm32/adc[23d[1;57H(B[0;7m Modified  [3;66H(B[mo$[9;66Hl$[23;1H(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[14d[A[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;9Hdrivers/stm32/tone_alarm[13;9Hdrivers/led[14;9Hdrivers/px4fmu[15;9Hdrivers/px4io[16;9Hdrivers/boards/px4fmu-v2[17;9Hdrivers/rgbled[18;9Hdrivers/mpu6000[19;9Hdrivers/mpu9250[20;9Hdrivers/lsm303d[21;9Hdrivers/l3gd20[12d[13d[14d[15d[16d[16;9Hdrivers/boards/apx4fmu-v2[16;25Hepx4fmu-v2[16;26Hrpx4fmu-v2[16;27Hopx4fmu-v2[16;28Hcpx4fmu-v2[16;29Hopx4fmu-v2[16;30Hrpx4fmu-v2[16;31Hepx4fmu-v2[16;32H-px4fmu-v2[16;33Hvpx4fmu-v2[16;34H2px4fmu-v2[16;35H[1P[1P[1Pmu-v2[K[35Gu-v2[K-v2[Kv2[K2[K [17;23H[1P[1P[1P[1P[1P[1P[1P[1Pgbled[K[9Gbled[Kled[Ked[Kd[K[K[17;9H[18;22r[22;1H
[1;24r[17;17Hdrivers/mpu6000[21;9Hdrivers/hmc5883[17;9H[8P[17;9H[1P[1P[1P[1P[1P[1P[1P[1P[1Pu6000[K[9G6000[K000[K00 0 [K[17;9H[18;22r[22;1H
[1;24r[17;17Hdrivers/mpu9250[21;9Hdrivers/ms5611[17;9H[8P[17;9H[1P[1P[1P[1P[1P[1P[1P[1P[1Pu9250[K[9G9250[K250[K50[K0[K[K[17;9H[18;22r[22;1H
[1;24r[17;17Hdrivers/lsm303d[21;9H#drivers/mb12xx[17;9H[8P[17;9H[18d[19d[1P[1P[1P[1P[1P[1P[1P[1P[1Pc5883[K[9G5883[K883[K83[K3[K[K[19;9H[19;17Hdrivers/ms5611[20;9H#drivers/mb12xx[21;9Hdrivers/srf02[K[19;9H[8P[19;9H[20d[1P[1P[1P[1P[1P[1P[1P[1P[1Pb12xx[K[9G12xx[K2xx[Kxx[Kx [K[20;9H[20;17Hdrivers/srf02[21;18Hf0x[K[20;9H[8P[20;9H[1P[1P[1P[1P[1P[1P[1Psrf02[K[9Grf02[Kf02[K02[K2[K[K[20;9H[20;17Hdrivers/sf0x[21;17Hll40ls[20;9H[8P[20;9H[1P[1P[1P[1P[1P[1P/sf0x[K[9Gsf0x[Kf0x[K0x[Kx[K[K[20;9H[20;17Hdrivers/ll40ls[21;17Htrone[K[20;9H[8P[20;9H[1P[1P[1P[1P[1P[1P[1P[1Pl40ls[K[9G40ls[K0ls[Kls[Ks[K[K[20;9H[20;17Hdrivers/trone[21;17Hgps[K[20;9H[8P[20;9H[1P[1P[1P[1P[1P[1P[1Ptrone[K[9Grone[Kone[Kne[Ke[K[K[20;9H[20;17Hdrivers/gps[21;17Hpwm_out_sim[20;9H[8P[20;9H[21d[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pt_sim[K[9G_sim[Ksim[Kim[Km[K[K[21;9H[21;17H#drivers/hott[21;9H[8P[21;9H[1P[1P[1P[1P[1P[1P[1P/hott[K[9Ghott[Kott[Ktt[Kt [K[21;9H[21;17H#drivers/hott/hott_telemetry[21;9H[8P[21;9H[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pmetry[K[9Getry[Ktry[Kry[Ky[K[K[21;9H[21;17H#drivers/hott/hott_sensors[21;9H[8P[21;9H[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pnsors[K[9Gsors[Kors[Krs[Ks[K[K[21;9H[21;17Hdrivers/blinkm[21;9H[8P[21;9H[1P[1P[1P[1P[1P[1P[1P[1Plinkm[K[9Ginkm[Knkm[Kkm[Km[K[K[21;9H[21;17Hdrivers/airspeed[21;9H[8P[21;9H[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pspeed[K[9Gpeed[Keed[Ked[Kd[K[K[21;9H[21;17Hdrivers/ets_airspeed[21;9H[8P[21;9H[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pspeed[K[9Gpeed[Keed[Ked[Kd[K[K[21;9H[21;17Hdrivers/meas_airspeed[21;9H[8P[21;9H[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pspeed[K[9Gpeed[Keed[Ked[Kd[K[K[21;9H[21;17Hdrivers/frsky_telemetry[21;9H[8P[21;9H[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pmetry[K[9Getry[Ktry[Kry[Ky[K[K[21;9H[21;17Hmodules/sensors[21;9H[8P[21;9H[3;9Hdrivers/led[4;9Hdrivers/px4fmu[5;8H[1K drivers/px4io[K[6;9Hdrivers/boards/aerocore-v2[7;9Hdrivers/lsm303d[K[8;9Hdrivers/l3gd20[9;17Hms5611[10;17Hgps[K[11d[K[12dmodules/sensors[K[13;9H#drivers/mkblctrl[14;21Hlow[15;9H#drivers/oreoled[16;17Hgimbal[K[17;17Hpwm_input[18;17Hcamera_trigger[19;17Hbst[K[20;17Hsnapdragon_rc_pwm[21;9Hdrivers/lis3mdl[12d[8G[1K modules/sensors[12;9H[Adrivere s/hil #was not in px4[12;22r[22;1H
[1;24r[11;41Hmodules/sensors[11;36H[5P[1P[1P[1P[1P[1P[1P[1P[1P[1Pnsors[K[36Gsors[Kors[Krs[Ks[K [12;26H[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Plctrl[K[9Gctrl[Ktrl[Krl[Kl[K[K[12;9H[13;22r[22;1H
[1;24r[12;17Hdrivers/px4flow[21;9H#[12;9H[8P[12;9H[1P[1P[1P[1P[1P[1P[1P[1P[1P4flow[K[9Gflow[Klow[Kow[Kw[K[K[12;9H[13;22r[22;1H
[1;24r[12;17H#drivers/oreoled[21;9H# System commands[12;9H[8P[12;9H[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Peoled[K[9Goled[Kled[Ked[Kd[K[K[12;9H[13;22r[22;1H
[1;24r[12;17Hdrivers/gimbal[21;9H#[12;9H[8P[12;9H[1P[1P[1P[1P[1P[1P[1P[1Pimbal[K[9Gmbal[Kbal[Kal[Kl[K[K[12;9H[13;22r[22;1H
[1;24r[12;17Hdrivers/pwm_input[21;9Hsystemcmds/bl_update[12;9H[8P[12;9H[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pinput[K[9Gnput[Kput[Kut[Kt[K[K[12;9H[13;22r[22;1H
[1;24r[12;17Hdrivers/camera_trigger[21;9Hsystemcmds/mixer[12;9H[8P[12;9Hmdrivers/camera_trigger[12;10Hodrivers/camera_trigger[12;11Hddrivers/camera_trigger[12;12Hudrivers/camera_trigger[12;13Hldrivers/camera_trigger[12;14Hedrivers/camera_trigger[12;15Hsdrivers/camera_trigger[12;16H/drivers/camera_trigger[12;17Hsdrivers/camera_trigger[12;18Hedrivers/camera_trigger[12;19Hndrivers/camera_trigger[12;20Hsdrivers/camera_trigger[12;21Hodrivers/camera_trigger[12;22Hrdrivers/camera_trigger[12;23Hsdrivers/camera_trigger[12;24H7[13;21r8[13dM[1;24r[12;24H[K[13ddrivers/camera_trigger[8G[1K drivers/camera_trigger[13;9Hddrivers/camera_trigger[13;10Hrdrivers/camera_trigger[13;11Hidrivers/camera_trigger[13;12Hvdrivers/camera_trigger[13;13Hedrivers/camera_trigger[13;14Hrdrivers/camera_trigger[13;15Hsdrivers/camera_trigger[13;16H/drivers/camera_trigger[13;17Hidrivers/camera_trigger[13;18Hndrivers/camera_trigger[13;19Hpdrivers/camera_trigger[13;20Hudrivers/camera_trigger[13;21Htdrivers/camera_trigger[13;22H_drivers/camera_trigger[13;23Hpdrivers/camera_trigger[13;24Hwdrivers/camera_trigger[13;25Hmdrivers/camera_trigger[13;26H[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pm[1P[1P[1P[1P[1Pigger[K[26Ggger[Kger[Ker[Kr[K [14;22r[22;1H
[1;24r[13;33Hdrivers/bst[21;9Hsystemcmds/mixer[13;26H[7P[1P[1P[1P[1P[1Ps/bst[K[26G/bst[Kbst[Kst[Kt[K [14;22r[22;1H
[1;24r[13;33Hdrivers/snapdragon_rc_pwm[21;9Hsystemcmds/param[13;26H[7P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pc_pwm[K[26G_pwm[Kpwm[Kwm[Km[K [14;22r[22;1H
[1;24r[13;33Hdrivers/lis3mdl[21;9Hsystemcmds/perf[13;26H[7P[1P[1P[1P[1P[1P[1P[1P[1P[1Ps3mdl[K[26G3mdl[Kmdl[Kmdl[Kl[K [14;22r[22;1H
[1;24r[21;9Hsystemcmds/pwm[13;26H7[14;21r8[14dM[1;24r[14;1H7[14;21r8M[1;24r[15;1H[A[14;9Hdrivers /aerocore_rc[17d[20d[17ds[18;10H[19;24H[20d[21d7[3;22r8[22d[10S[1;24r[12;9Hsystemcmds/perf[13;9Hsystemcmds/pwm[14;9Hsystemcmds/esc_calib[15;9Hsystemcmds/reboot[16;9H#systemcmds/topic_listener[17;9Hsystemcmds/top[18;9Hsystemcmds/config[19;9Hsystemcmds/nshterm[20;9Hsystemcmds/mtd[21;9Hsystemcmds/dumpfile[12;24H[13d[14d_[15d[16d[A[A[A[Af[A[A[Asystemcmds/[1P[1P[1Ppdate[K[20Gdate[Kate[Kte[Ke[Kveer[10d[11d[12d[13d[14d[15d[16d[15;26Ht[16d[16;9H[17d[18d[19d[20d[21d7[3;21r8[10S[1;24r[9;18r[9;1H[3T[1;24r[9;9Hsystemcmds/nshterm[10;9Hsystemcmds/mtd[11;9Hsystemcmds/dumpfile[12;20Hver[K[13;9H#systemcmds/sd_bench[14;9H#systemcmds/tests[K[16;9H#[17d# General system control[18;9H#[19dmodules/commander[20;9Hmodules/load_mon[21;9Hmodules/navigator[12;9H[13d[14d[A[A[1P[1P[1P[1P[1P[1P[1P[1Ps/ver[K[9G/ver[Kver[Ker[Kr[K[K[12;9H[13;22r[22;1H
[1;24r[12;17H#systemcmds/sd_bench[21;9Hmodules/mavlink[12;9H[8P[12;9H[13d[14d[15;9H[16d[17d[18d[19d[20d[A[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pd_mon[K[9G_mon[Kmon[Kon[Kn[K[K[19;9H[19;17Hmodules/navigator[20;17Hmavlink[K[21;9H#modules/gpio_led[19;9H[8P[19;9H[20d[21d7[3;22r8[22d[10S[1;24r[12;9Hmodules/uavcan[13;9Hmodules/land_detector[15;9H#[16d# Estimation modules (EKF/ SO3 / other filters)[17;9H#[18dmodules/attitude_estimator_q[19;9Hmodules/ekf_att_pos_estimator[20;9Hmodules/position_estimator_inav[21;9Hmodules/local_position_estimator[12;9H[13d[A[1P[1P[1P[1P[1P[1P[1P[1Pavcan[K[9Gvcan[Kcan[Kan[Kn[K[K[12;9H[13;22r[22;1H
[1;24r[12;17Hmodules/land_detector[12;9H[8P[12;9H7[12;22r8M[1;24r[13;1H[8P[A[13d[12;21r[12;1HM[1;24r[14;1H[8G[1K modules/land_detector[14;9H[A[12;9H#modules/uavcan[13d[13;22r[22;1H
[1;24r[21;9Hmodules/local_position_estimator[13d[14d[15d[16d[17d[18d[19d[20d[21d[21;16H[1K modules/local_position_estimator[21;9H[8P[21;9H#modules/local_position_estimator[21;10H7[2;22r8[22d[10S[1;24r[2;1H[K[13;9H#[14d# Vehicle Control[15;9H#[16dmodules/fw_pos_control_l1[17;9Hmodules/fw_att_control[18;9Hmodules/mc_att_control[19;9Hmodules/mc_pos_control[20;9Hmodules/vtol_att_control[12d[13;10H[14d[15d[16d[17d[18d[19d[20d[21d7[2;22r8[22d[10S[1;24r[12;9H#[13d# Logging[14;9H#[15dmodules/logger[16;9Hmodules/sdlog2[18;9H#[19d# Library modules[20;9H#[21dmodules/param[12;10H[13d[14d[15d[22d(B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?       [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No           (B[0;7m^C(B[m Cancel[K[22;62H[23d[J[24;67H[24;1H[?1049l[?1l>]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/configsjessica@mcwiljl-ll1:~/src/Firmware/cmake/configs$ nano nuttx_aerocorre-v2_default.cmake 
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6  File: nuttx_aerocore-v2_default.cmake            [3;1H(B[minclude(nuttx/px4_impl_nuttx)[5dset(CMAKE_TOOLCHAIN_FILE ${CMAKE_SOURCE_DIR}/cmake/toolchains/Tool$[7;1Hset(config_uavcan_num_ifaces 2)[9dset(config_module_list[10;9H#[11d# Board support modules[12;9H#[13ddrivers/device[14;9Hdrivers/stm32[15;9Hdrivers/stm32/adc[16;9Hdrivers/stm32/tone_alarm[17;9Hdrivers/led[18;9Hdrivers/px4fmu[19;9Hdrivers/px4io[20;9Hdrivers/boards/px4fmu-v2[21;9Hdrivers/rgbled[22d  (B[0;7m[ Read 196 lines ][23d^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[3d[4d[5d[6d[7d[8d[9d[10d[11d[12d[13d[14d[14;9H[15d[16d[17d[18d[19d[A[19d[1;58H(B[0;7mModified[19;9H(B[m#drivers/px4io[19;10H[20d#drivers/boards/px4fmu-v2[20;10H[21dddrivers/rgbled[22d[K[21;10Hrdrivers/rgbled[21;11Hidrivers/rgbled[21;12Hvdrivers/rgbled[21;13Hedrivers/rgbled[21;14Hrdrivers/rgbled[21;15Hsdrivers/rgbled[21;16H drivers/rgbled[21;17H[1P/drivers/rgbled[21;17Hbdrivers/rgbled[21;18Hodrivers/rgbled[21;19Hadrivers/rgbled[21;20Hrdrivers/rgbled[21;21Hddrivers/rgbled[21;22Hsdrivers/rgbled[21;23H/drivers/rgbled[21;24Hadrivers/rgbled[21;25Hedrivers/rgbled[21;26Hrdrivers/rgbled[21;27Hodrivers/rgbled[21;28Hcdrivers/rgbled[21;29Hodrivers/rgbled[21;30Hrdrivers/rgbled[21;31Hedrivers/rgbled[21;32H-drivers/rgbled[21;33Hvdrivers/rgbled[21;34H2drivers/rgbled[21;35H[1P[1P[1P7[3;22r8[22d[10S[1;24r[11;32H[K[12ddrivers/rgbled[13;9Hdrivers/mpu6000[14;9Hdrivers/mpu9250[15;9Hdrivers/lsm303d[16;9Hdrivers/l3gd20[17;9Hdrivers/hmc5883[18;9Hdrivers/ms5611[19;9H#drivers/mb12xx[20;9Hdrivers/srf02[21;9Hdrivers/sf0x[12d`drivers/rgbled```drivers/rgbled`````drivers/rgbled```[1P``[1P`[1P[8G[1K drivers/rgbled[12;9H#drivers/rgbled[12;10H[13d#drivers/mpu6000[13;10H[14d#drivers/mpu9250[14;10H[15d[16d[17d#drivers/hmc5883[17;10H[18d[19d[20d[21d#drivers/sf0x[21;10H[A#drivers/srf02[20;10H[21d7[3;22r8[22d[10S[1;24r[12;9Hdrivers/ll40ls[13;9Hdrivers/trone[14;9Hdrivers/gps[15;9Hdrivers/pwm_out_sim[16;9H#drivers/hott[17;9H#drivers/hott/hott_telemetry[18;9H#drivers/hott/hott_sensors[19;9Hdrivers/blinkm[20;9Hdrivers/airspeed[21;9Hdrivers/ets_airspeed[12;10H[13d3drivers/trone[13;10H[A#drivers/ll40ls[12;10H[13d[8P#3drivers/trone#[1P[8G[1K #drivers/trone[13;9H[14d[15d[15;9H3drivers/pwm_out_sim[15;10H[1P#drivers/pwm_out_sim[15;10H[16d[17d[18d[19d#drivers/blinkm[19;10H[20d#drivers/airspeed[20;10H[21d#drivers/ets_airspeed[21;10Hdrivers/ets_airspeed7[3;22r8[22d[10S[1;24r[12;9Hdrivers/meas_airspeed[13;9Hdrivers/frsky_telemetry[14;9Hmodules/sensors[15;9H#drivers/mkblctrl[16;9Hdrivers/px4flow[17;9H#drivers/oreoled[18;9Hdrivers/gimbal[19;9Hdrivers/pwm_input[20;9Hdrivers/camera_trigger[21;9Hdrivers/bst[12;30H#drivers/meas_airspeed[12;10H[13d#drivers/frsky_telemetry[13;10H[14ddmodules/sensors[14;10Hrmodules/sensors[14;11Himodules/sensors[14;12Hvmodules/sensors[14;13Hemodules/sensors[14;14Hrmodules/sensors[14;15Hsmodules/sensors[14;16H/modules/sensors[14;17Hhmodules/sensors[14;18Himodules/sensors[14;19Hlmodules/sensors[14;20H7[15;21r8[15dM[1;24r[14;20H[K[15dmodules/sensors`modules/sensors`       modules/sensors[15;9H`[16d[17d[17;9H[A[A[8G[1K[16d[17d[17;9H#drivers/px4flow[17;10H[18d[19d#drivers/gimbal[19;10H[20d#drivers/pwm_input[20;10H[21dddrivers/camera_trigger[21;10Hidrivers/camera_trigger[21;11Hrdrivers/camera_trigger[21;12Hvdrivers/camera_trigger[21;13Hedrivers/camera_trigger[21;14Hrdrivers/camera_trigger[21;15Hsdrivers/camera_trigger[21;16H[1P[1P[1P[1P[1P[1Prdrivers/camera_trigger[21;11Hidrivers/camera_trigger[21;12Hvdrivers/camera_trigger[21;13Hedrivers/camera_trigger[21;14Hsdrivers/camera_trigger[21;15H[1Prdrivers/camera_trigger[21;15Hsdrivers/camera_trigger[21;16H/drivers/camera_trigger[21;17Hidrivers/camera_trigger[21;18Hndrivers/camera_trigger[21;19Hpdrivers/camera_trigger[21;20Hudrivers/camera_trigger[21;21Htdrivers/camera_trigger[21;22H_drivers/camera_trigger[21;23Hpdrivers/camera_trigger[21;24Hwdrivers/camera_trigger[21;25Hmdrivers/camera_trigger[21;26H7[3;22r8[22d[10S[1;24r[11;26H[K[12ddrivers/camera_trigger[13;9Hdrivers/bst[14;9Hdrivers/snapdragon_rc_pwm[15;9Hdrivers/lis3mdl[17;9H#[18d# System commands[19;9H#[20dsystemcmds/bl_update[21;9Hsystemcmds/mixer[12d`drivers/camera_trigger`[1P[8G[1K drivers/camera_trigger[12;9H#drivers/camera_trigger[12;10H[13d#drivers/bst[13;10H[14d#drivers/snapdragon_rc_pwm[14;10H[15d#drivers/lis3mdl[15;10H[16d7[16;21r8M[1;24r[17;1H[A[16;9Hdrivers/aercore_rc[17d[18;10H[19;26H[18;10H[A[16;27H[A[Ago[13;21H[12;27H[A[At[A[Ad[A[Al[A[A[3;27H[2;21r[2;1H[10T[1;24r[3;9H#drivers/trone[4;9Hdrivers/gps[5;9H#drivers/pwm_out_sim[6;9H#drivers/hott[7;9H#drivers/hott/hott_telemetry[8;9H#drivers/hott/hott_sensors[9;9H#drivers/blinkm[10;9H#drivers/airspeed[11;9H#drivers/ets_airspeed[12;9H#drivers/meas_airspeed[A[A[A[Aott[A[6;22H[5;27H[4;20H[Aone[2;21r[2;1H[10T[1;24r[3;9H#drivers/mpu6000[4;9H#drivers/mpu9250[5;9Hdrivers/lsm303d[6;9Hdrivers/l3gd20[7;9H#drivers/hmc5883[8;9Hdrivers/ms5611[9;9H#drivers/mb12xx[10;9H#drivers/srf02[11;9H#drivers/sf0x[12;9H#drivers/ll40ls[A[A2[Ax[A[A83[A[Ad[A0[A[2;21r[2;1H[10T[1;24r[3;9Hdrivers/device[4;9Hdrivers/stm32[5;9Hdrivers/stm32/adc[6;9Hdrivers/stm32/tone_alarm[7;9Hdrivers/led[8;9Hdrivers/px4fmu[9;9H#drivers/px4io[10;9H#drivers/boards/px4fmu-v2[11;9Hdrivers/boards/aerocore[12;9H#drivers/rgbled[Aaer[A[A[A[A[6;27H[A[A[5;26H[6de[7;20H[8;23H[9d[10;27H[11d[12;24H[13d0[14d[15d[16d[17d83[18d[19dx[20d[21d7[3;22r8[22d[10S[1;24r[12;9H#drivers/ll40ls[13;9H#drivers/trone[14;9Hdrivers/gps[15;9H#drivers/pwm_out_sim[16;9H#drivers/hott[17;9H#drivers/hott/hott_telemetry[18;9H#drivers/hott/hott_sensors[19;9H#drivers/blinkm[20;9H#drivers/airspeed[21;9H#drivers/ets_airspeed[12;24H[13d[14;20H[15;27H[16;22H[17;27H[18d[19;24H[20ded[21dp7[3;22r8[22d[10S[1;24r[12;9H#drivers/meas_airspeed[13;9H#drivers/frsky_telemetry[14;9Hdrivers/hil[15;9Hmodules/sensors[16;9H#drivers/mkblctrl[17;9H#drivers/px4flow[18;9H#drivers/oreoled[19;9H#drivers/gimbal[20;9H#drivers/pwm_input[21;9Hdrivers/input_pwm[12;27H[13d[14;20H[15;24H[16drl[17d[18d[19d[20;27H[21d7[3;22r8[22d[10S[1;24r[12;9H#drivers/camera_trigger[13;9H#drivers/bst[14;9H#drivers/snapdragon_rc_pwm[15;9H#drivers/lis3mdl[16;9Hdrivers/aercore_rc[18;9H#[19d# System commands[20;9H#[21dsystemcmds/bl_update[12;27H[13;21H[14;27H[15d[16drc[17d[18;10H[19;26H[20;10H[21;27H7[3;22r8[22d[10S[1;24r[12;9Hsystemcmds/mixer[13;9Hsystemcmds/param[14;9Hsystemcmds/perf[15;9Hsystemcmds/pwm[16;9Hsystemcmds/esc_calib[17;9Hsystemcmds/reboot[18;9H#systemcmds/topic_listener[19;9Hsystemcmds/top[20;9Hsystemcmds/config[21;9Hsystemcmds/nshterm[12;25H[13d[A[A#systemcmds/bl_update[11;10H[14d[15d[16d[17d[18d[18;9H[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;9Hsystemcmds/mtd[13;9Hsystemcmds/dumpfile[14;9Hsystemcmds/ver[15;9H#systemcmds/sd_bench[16;9H#systemcmds/tests[18;9H#[19d# General system control[20;9H#[21dmodules/commander[12;9H[13d[14d[15d[16d[17d[18;9H[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;9Hmodules/load_mon[13;9Hmodules/navigator[14;9Hmodules/mavlink[15;9H#modules/gpio_led[16;9Hmodules/uavcan[17;9Hmodules/land_detector[19;9H#[20d# Estimation modules (EKF/ SO3 / other filters)[21;9H#[12;9H[13d[14d[15d[16d[17d[A#modules/uavcan[16;10H[A[A[A[A#modules/load_mon[12;10H[13d[14d[15d[16d[17d[18d[19;10H[20d[21d7[3;22r8[22d[10S[1;24r[12;9Hmodules/attitude_estimator_q[13;9Hmodules/ekf_att_pos_estimator[14;9Hmodules/position_estimator_inav[15;9Hmodules/local_position_estimator[17;9H#[18d# Vehicle Control[19;9H#[20dmodules/fw_pos_control_l1[21;9Hmodules/fw_att_control[12;10H[13d[14d[15d[16d[15;10H#modules/local_position_estimator[15;10H[16d[17;10H[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;9Hmodules/mc_att_control[13;9Hmodules/mc_pos_control[14;9Hmodules/vtol_att_control[16;9H#[17d# Logging[18;9H#[19dmodules/logger[20;9Hmodules/sdlog2[12;10H[13d[14d[15d[16;10H[17d[18d[19d#modules/logger[19;10H[20d3modules/sdlog2[20;10H[1P#modules/sdlog2[20;10H[21d7[3;22r8[22d[10S[1;24r[12;9H#[13d# Library modules[14;9H#[15dmodules/param[16;9Hmodules/systemlib[17;9Hmodules/systemlib/mixer[18;9Hmodules/uORB[19;9Hmodules/dataman[21;9H#[12;10H[13d[14d[15d#modules/param[15;10H[16d[17d[18dmmodules/uORB[18;10Homodules/uORB[18;11Hdmodules/uORB[18;12Humodules/uORB[18;13Hlmodules/uORB[18;14Hemodules/uORB[18;15Hsmodules/uORB[18;16H/modules/uORB[18;17Hcmodules/uORB[18;18Homodules/uORB[18;19Hnmodules/uORB[18;20Htmodules/uORB[18;21Hrmodules/uORB[18;22Homodules/uORB[18;23Hlmodules/uORB[18;24Hllmodules/uORB[18;25Himodules/uORB[18;26Hbmodules/uORB[18;27H[K[19dmodules/uORB[K[20;9Hmodules/dataman[21d[K[19d[8G[1K modules/uORB[19;9H[20d[21d7[3;22r8[22d[10S[1;24r[12;9H#[13d# Libraries[14;9H#[15dlib/controllib[16;9Hlib/mathlib[17;9Hlib/mathlib/math/filter[18;9Hlib/ecl[19;9Hlib/external_lgpl[20;9Hlib/geo[21;9Hlib/geo_lookup[12;9H[13d[14d[15d[18d[A[A[A[A[A[A[A[10;9H[A[A#modules/controllib[8;10H##modules/controllib[8;11H[9d[10d[11d[12;10H[13d [14d[15di[16d[A[A[A [A[A[10;11H[A[A[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pollib[K[9Gllib[Klib[Kib[Kb[K[K[8;9H[9;22r[22;1H
[1;24r[8;17Hmodules/uORB[21;9Hlib/conversion[8;9H[8P[8;9H[9d[10d[11;9H[12d[13d[14d#lib/controllib[14;10H[15d[A[A[14d[1P[15dllib/mathlib[15;10Hilib/mathlib[15;11Hblib/mathlib[15;12H/lib/mathlib[15;13Hmlib/mathlib[15;14Halib/mathlib[15;15Htlib/mathlib[15;16Hhlib/mathlib[15;17Hllib/mathlib[15;18Hilib/mathlib[15;19Hblib/mathlib[15;20H/lib/mathlib[15;21HClib/mathlib[15;22HMlib/mathlib[15;23HSlib/mathlib[15;24HIlib/mathlib[15;25HSlib/mathlib[15;26H7[16;21r8[16dM[1;24r[15;26H[K[16dlib/mathlib[8G[1K lib/mathlib[16;9H[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;9Hlib/conversion[13;9Hlib/launchdetection[14;9Hlib/terrain_estimation[15;9Hlib/runway_takeoff[16;9Hlib/tailsitter_recovery[17;9Hlib/DriverFramework/framework[18;9Hplatforms/nuttx[20;9H# had to add for cmake, not sure why wasn't in original co$[21;9Hplatforms/common[12;9H[13d[14d#lib/terrain_estimation[14;10H[1P[15d[16d[17d[18d[19d[20;9H[21d7[3;22r8[22d[10S[1;24r[12;9Hplatforms/nuttx/px4_layer[14;9H#[15d# OBC challenge[16;9H#[17d#modules/bottle_drop[19;9H#[20d# Rover apps[21;9H#[12;9H[A[A# had to add for cmake, not sure why wasn't in original c$nal config[K[1K # had to add for cmake, not sure why wasn't in original co$[10;66H[11d[12d[A[A[A[8;9H[9d[10;9H[9;21r[9;1HM[1;24r[11;1H# had to add for cmake, not sure why wasn't in original config[K[8G[1K # had to add for cmake, not sure why wasn't in original co$[11;9H[A3I u  [K[10;9H# I guess I w        # I guess I will just liea   eave this for not w...[11d[12;26H[13;34H[14d[15;10H[A[15;10H[16;24H[17;10H[18;29H[1P[19d[20;9H[21d7[3;22r8[22d[10S[1;24r[12;9H#[13d#examples/rover_steering_control[15;9H#[16d# Demo apps[17;9H#[18d#examples/math_demo[19;9H# Tutorial code from[20;9H# https://px4.io/dev/px4_simple_app[21;9H#examples/px4_simple_app[12;9H[13d[1P[14d[15;9H[16d[17d[18d[19d[20d[21d[1P7[2;22r8[22d[10S[1;24r[2;1H[K[13;9H# Tutorial code from[14;9H# https://px4.io/dev/daemon[15;9H#examples/px4_daemon_app[17;9H# Tutorial code from[18;9H# https://px4.io/dev/debug_values[19;9H#examples/px4_mavlink_debug[21;9H# Tutorial code from[12d[13;9H[14d[15d[16d[17;9H[18d[19d[20d[21;9H7[2;22r8[22d[10S[1;24r[12;9H# https://px4.io/dev/example_fixedwing_control[13;9H#examples/fixedwing_control[15;9H# Hardware test[16;9H#examples/hwtest[17d)[19dset(config_extra_builtin_cmds[20;9Hserdis[21;9Hsercon[12;9H[13d[14d[15;9H[16d[17d)[18d[19;9H[3;22r[22;1H[10S[1;24r[12;9H)[14dset(config_io_board[15;9Hpx4io-v2[16;9H)[18dset(config_extra_libs[19;9Huavcan[20;9Huavcan_stm32_driver[21;9H)[12;9H[15d[18d[21d7[2;22r8[22d[10S[1;24r[2;1H[K[13dset(config_io_extra_libs[14;9H)[16dadd_custom_target(sercon)[17dset_target_properties(sercon PROPERTIES[18;9HPRIORITY "SCHED_PRIORITY_DEFAULT"[19;9HMAIN "sercon" STACK_MAIN "2048")[21dadd_custom_target(serdis)[14;9H[17d[18d[19d[20d[2;22r[22;1H[10S[1;24r[12;1Hset_target_properties(serdis PROPERTIES[13;9HPRIORITY "SCHED_PRIORITY_DEFAULT"[14;9HMAIN "serdis" STACK_MAIN "2048")[13;9H[15d[12;9H[9d[6d[3d[2;21r[2;1H[10T[1;24r[4;1Hset(config_io_board[5;9Hpx4io-v2[6;9H)[8dset(config_extra_libs[9;9Huavcan[10;9Huavcan_stm32_driver[11;9H)[A[13d[16d[19d[2;22r[22;1H[10S[1;24r[12;1Hset_target_properties(serdis PROPERTIES[13;9HPRIORITY "SCHED_PRIORITY_DEFAULT"[14;9HMAIN "serdis" STACK_MAIN "2048")[12;9H[15d[12;9H[9d[A[6d[3d[2;21r[2;1H[10T[1;24r[4;1Hset(config_io_board[5;9Hpx4io-v2[6;9H)[8dset(config_extra_libs[9;9Huavcan[10;9Huavcan_stm32_driver[11;9H)[A[7d[4;9H[2;22r[2;1H[10T[1;24r[3;9H#examples/fixedwing_control[5;9H# Hardware test[6;9H#examples/hwtest[7d)[9dset(config_extra_builtin_cmds[10;9Hserdis[11;9Hsercon[12;9H)[A[12d[13d7[13;21r8M[1;24r[14;1H# Might not nee   want to c keep this[22d(B[0;7mSave modified buffer (ANSWERING "No" WILL DESTROY CHANGES) ?       [23;1H Y(B[m Yes[K[24d(B[0;7m N(B[m No           (B[0;7m^C(B[m Cancel[K[22;62H(B[0;7mFile Name to Write: nuttx_aerocore-v2_default.cmake         [23d^G(B[m Get Help     (B[0;7mM-D(B[m DOS Format  (B[0;7mM-A(B[m Append[49G(B[0;7mM-B(B[m Backup File[24d(B[0;7m^C(B[m Cancel[17G(B[0;7mM-M(B[m Mac Format  (B[0;7mM-P(B[m Prepend[22;52H[23d[39;49m(B[m[J[1;58H(B[0;7m        [22;24H(B[m[1K (B[0;7m[ Wrote 203 lines ](B[m[K[24;67H[24;1H[?1049l[?1l>]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/configsjessica@mcwiljl-ll1:~/src/Firmware/cmake/configs$ ls
nuttx_aerocore-v2_default.cmake
nuttx_mindpx-v2_default.cmake
nuttx_px4fmu-v1_default.cmake
nuttx_px4fmu-v2_default.cmake
nuttx_px4fmu-v2_ekf2.cmake
nuttx_px4fmu-v2_test.cmake
nuttx_px4fmu-v4_default.cmake
nuttx_px4-stm32f4discovery_default.cmake
posix_bebop_default.cmake
posix_eagle_default.cmake
posix_eagle_hil.cmake
posix_eagle_legacy_driver_default.cmake
posix_eagle_muorb.cmake
posix_excelsior_default.cmake
posix_rpi2_default.cmake
posix_rpi2_release.cmake
posix_sdflight_default.cmake
posix_sitl_broadcast.cmake
posix_sitl_default.cmake
posix_sitl_lpe.cmake
posix_sitl_replay.cmake
posix_sitl_test.cmake
qurt_eagle_default.cmake
qurt_eagle_hello.cmake
qurt_eagle_hil.cmake
qurt_eagle_legacy_driver_default.cmake
qurt_eagle_muorb.cmake
qurt_eagle_test.cmake
qurt_eagle_travis.cmake
qurt_excelsior_default.cmake
qurt_sdflight_default.cmake
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/configsjessica@mcwiljl-ll1:~/src/Firmware/cmake/configs$ lsnano nuttx_aerocorre-v2_default.cmake [A]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/configsjessica@mcwiljl-ll1:~/src/Firmware/cmake/configs$ ls[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[Kcd ..
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ ls
[0m[01;34mcmake_hexagon[0m  [01;34mnuttx[0m  ros-CMakeLists.txt  [01;34mtest[0m
[01;34mcommon[0m         [01;34mposix[0m  [01;34mscripts[0m             [01;34mtoolchains[0m
[01;34mconfigs[0m        [01;34mqurt[0m   [01;34mtemplates[0m
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ cd nuttx/
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/nuttxjessica@mcwiljl-ll1:~/src/Firmware/cmake/nuttx$ ls
[0m[01;32mbin_to_obj.py[0m  builtin_commands.c.in  px4_impl_nuttx.cmake
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/nuttxjessica@mcwiljl-ll1:~/src/Firmware/cmake/nuttx$ cd ..
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ cd common/
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/commonjessica@mcwiljl-ll1:~/src/Firmware/cmake/common$ ls
px4_base.cmake
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmake/commonjessica@mcwiljl-ll1:~/src/Firmware/cmake/common$ cd ..
]0;jessica@mcwiljl-ll1: ~/src/Firmware/cmakejessica@mcwiljl-ll1:~/src/Firmware/cmake$ cd ..
]0;jessica@mcwiljl-ll1: ~/src/Firmwarejessica@mcwiljl-ll1:~/src/Firmware$ ls
aerocore_cmake_1.log      [0m[01;34mintegrationtests[0m  [01;34mposix-configs[0m
[01;34mbuild_px4fmu-v2_default[0m   [01;34mlaunch[0m            README.md
[01;34mbuild_px4fmu-v4_default[0m   LICENSE.md        [01;34mROMFS[0m
[01;34mcmake[0m                     Makefile          [01;34msrc[0m
CMakeLists.txt            [01;34mmavlink[0m           template_.cproject
CONTRIBUTING.md           [01;34mmisc[0m              template_.project
[01;34mDebug[0m                     [01;34mmsg[0m               [01;34mTools[0m
[01;34mDocumentation[0m             [01;34mNuttX[0m             [01;34munittests[0m
Firmware.sublime-project  [01;34mnuttx-configs[0m     Vagrantfile
[01;34mImages[0m                    package.xml
]0;jessica@mcwiljl-ll1: ~/src/Firmwarejessica@mcwiljl-ll1:~/src/Firmware$ cd d[K[K[K[Knano Makefile 
[?1049h[1;24r(B[m[4l[?7h[?12l[?25h[?1h=[?1h=[?1h=[39;49m[39;49m(B[m[H[2J(B[0;7m  GNU nano 2.2.6          File: Makefile                           [3;1H(B[m##################################################################$[4;1H#[5d# Copyright (c) 2015 - 2016 PX4 Development Team. All rights reser$[6;1H#[7d# Redistribution and use in source and binary forms, with or witho$[8;1H# modification, are permitted provided that the following conditio$[9;1H# are met:[10d#[11d# 1. Redistributions of source code must retain the above copyright[12;1H#    notice, this list of conditions and the following disclaimer.[13d# 2. Redistributions in binary form must reproduce the above copyr$[14;1H#    notice, this list of conditions and the following disclaimer $[15;1H#    the documentation and/or other materials provided with the[16d#    distribution.[17d# 3. Neither the name PX4 nor the names of its contributors may be[18d#    used to endorse or promote products derived from this software[19;1H#    without specific prior written permission.[20d#[21d# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUT$[22;25H(B[0;7m[ Read 331 lines ][23d^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[3d[4d[5d[6d[7d[8d[9d[10d[11d[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;21r8[10S[1;24r[12;1H# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT[13;1H# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS[14;1H# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE[15d# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRE$[16;1H# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUD$[17;1H# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;$[18;1H# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUS$[19;1H# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT[20d# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN[21;1H# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE[12d[13d[14d[15d[16d[17d[18d[22d[K[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1H# POSSIBILITY OF SUCH DAMAGE.[13d#[14d##################################################################$[16;1H# Enforce the presence of the GIT repository[17d#[18d# We depend on our submodules, so we have to prevent attempts to[19d# compile without it being present.[20difeq ($(wildcard .git),)[21;5H$(error YOU HAVE TO USE GIT TO DOWNLOAD THIS REPOSITORY. ABORT$[12;1H[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1Hendif[14dCMAKE_VER := $(shell Tools/check_cmake.sh; echo $$?)[15difneq ($(CMAKE_VER),0)[16;5H$(warning Not a valid CMake version or CMake not installed.)[17;5H$(warning On Ubuntu, install or upgrade via:)[18;5H$(warning )[19;5H$(warning 3rd party PPA:)[20;5H$(warning sudo add-apt-repository ppa:george-edison55/cmake-3.$[21;5H$(warning sudo apt-get update)[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;5H$(warning sudo apt-get install cmake)[13;5H$(warning )[14;5H$(warning Official website:)[15;5H$(warning wget https://cmake.org/files/v3.3/cmake-3.3.2-Linux-$[16;5H$(warning chmod +x cmake-3.3.2-Linux-x86_64.sh)[17;5H$(warning sudo mkdir /opt/cmake-3.3.2)[18;5H$(warning sudo ./cmake-3.3.2-Linux-x86_64.sh --prefix=/opt/cma$[19;5H$(warning export PATH=/opt/cmake-3.3.2/bin:$$PATH)[20;5H$(warning )[21;5H$(error Fatal)[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1Hendif[14d# Help[15d# ----------------------------------------------------------------$[16;1H# Don't be afraid of this makefile, it is just passing[17d# arguments to cmake to allow us to keep the wiki pages etc.[18d# that describe how to build the px4 firmware[19d# the same even when using cmake instead of make.[20d#[21d# Example usage:[12d[13d[14d[15d[16d[17d[18d[19d[20d[21d7[3;22r8[22d[10S[1;24r[12;1H#[13d# make px4fmu-v2_default[13;49H(builds)[14d# make px4fmu-v2_default upload[14;41H(builds and uploads)[15d# make px4fmu-v2_default test[15;41H(builds and tests)[16d#[17d# This tells cmake to build the nuttx px4fmu-v2 default config in $[18;1H# directory build_nuttx_px4fmu-v2_default and then call make[19d# in that directory with the target upload.[21d#  explicity set default build target[12d[13d[14d[15d[16d[17d[18d[19d[20d[A[A[A[24;1H[?1049l[?1l>[?1049h[1;25r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6          File: Makefile                           [4;1H(B[m# Help[5d# ----------------------------------------------------------------$[6;1H# Don't be afraid of this makefile, it is just passing[7d# arguments to cmake to allow us to keep the wiki pages etc.[8d# that describe how to build the px4 firmware[9d# the same even when using cmake instead of make.[10d#[11d# Example usage:[12d#[13d# make px4fmu-v2_default[13;49H(builds)[14d# make px4fmu-v2_default upload[14;41H(builds and uploads)[15d# make px4fmu-v2_default test[15;41H(builds and tests)[16d#[17d# This tells cmake to build the nuttx px4fmu-v2 default config in $[18;1H# directory build_nuttx_px4fmu-v2_default and then call make[19d# in that directory with the target upload.[21d#  explicity set default build target[23d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[17d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6          File: Makefile                           [4;1H(B[m# Help[5d# ----------------------------------------------------------------$[6;1H# Don't be afraid of this makefile, it is just passing[7d# arguments to cmake to allow us to keep the wiki pages etc.[8d# that describe how to build the px4 firmware[9d# the same even when using cmake instead of make.[10d#[11d# Example usage:[12d#[13d# make px4fmu-v2_default[13;49H(builds)[14d# make px4fmu-v2_default upload[14;41H(builds and uploads)[15d# make px4fmu-v2_default test[15;41H(builds and tests)[16d#[17d# This tells cmake to build the nuttx px4fmu-v2 default config in $[18;1H# directory build_nuttx_px4fmu-v2_default and then call make[19d# in that directory with the target upload.[21d#  explicity set default build target[24d[22dall: px4fmu-v2_default[24d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[25d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[17d[25;1H[?1049l[?1l>[?1049h[1;55r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6          File: Makefile                           [4d(B[m# Help[5d# ----------------------------------------------------------------$[6d# Don't be afraid of this makefile, it is just passing[7d# arguments to cmake to allow us to keep the wiki pages etc.[8d# that describe how to build the px4 firmware[9d# the same even when using cmake instead of make.[10d#[11d# Example usage:[12d#[13d# make px4fmu-v2_default[13;49H(builds)[14d# make px4fmu-v2_default upload[14;41H(builds and uploads)[15d# make px4fmu-v2_default test[15;41H(builds and tests)[16d#[17d# This tells cmake to build the nuttx px4fmu-v2 default config in $[18d# directory build_nuttx_px4fmu-v2_default and then call make[19d# in that directory with the target upload.[21d#  explicity set default build target[22dall: px4fmu-v2_default[24d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[25d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[17d[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6          File: Makefile                           [4d(B[m# Help[5d# ----------------------------------------------------------------$[6d# Don't be afraid of this makefile, it is just passing[7d# arguments to cmake to allow us to keep the wiki pages etc.[8d# that describe how to build the px4 firmware[9d# the same even when using cmake instead of make.[10d#[11d# Example usage:[12d#[13d# make px4fmu-v2_default[13;49H(builds)[14d# make px4fmu-v2_default upload[14;41H(builds and uploads)[15d# make px4fmu-v2_default test[15;41H(builds and tests)[16d#[17d# This tells cmake to build the nuttx px4fmu-v2 default config in $[18d# directory build_nuttx_px4fmu-v2_default and then call make[19d# in that directory with the target upload.[21d#  explicity set default build target[22dall: px4fmu-v2_default[24d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[25d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[54d[1;27H(B[0;7m              [1;49HFile: Makefile                                                                        [5;67H(B[m----[17;67Hthe[24d# Parsing[K[25d# --------------------------------------------------------------------[26d# assume 1st argument passed is the main target, the[27d# rest are arguments to pass to the makefile generated[28d# by cmake in the subdirectory[29dARGS := $(wordlist 2,$(words $(MAKECMDGOALS)),$(MAKECMDGOALS))[30dj ?= 4[32dNINJA_BUILD := $(shell ninja --version 2>/dev/null)[33difdef NINJA_BUILD[34;5HPX4_CMAKE_GENERATOR ?= "Ninja"[35;5HPX4_MAKE = ninja[36;5HPX4_MAKE_ARGS =[37delse[39difdef SYSTEMROOT[40;9H# Windows[41;9HPX4_CMAKE_GENERATOR ?= "MSYS Makefiles"[42delse[43;9HPX4_CMAKE_GENERATOR ?= "Unix Makefiles"[44dendif[45dPX4_MAKE = make[46;5HPX4_MAKE_ARGS = -j$(j) --no-print-directory[47dendif[49d# Functions[50d# --------------------------------------------------------------------[51d# describe how to build a cmake config[52ddefine cmake-build[54d(B[0;7m^G(B[m Get Help[54;23H(B[0;7m^O(B[m WriteOut[54;45H(B[0;7m^R(B[m Read File[54;67H(B[0;7m^Y(B[m Prev Page[54;89H(B[0;7m^K(B[m Cut Text[54;111H(B[0;7m^C(B[m Cur Pos[55d(B[0;7m^X(B[m Exit[55;23H(B[0;7m^J(B[m Justify[55;45H(B[0;7m^W(B[m Where Is[55;67H(B[0;7m^V(B[m Next Page[55;89H(B[0;7m^U(B[m UnCut Text[55;111H(B[0;7m^T(B[m To Spell[17d[18d[19d[20d[21d[22d[23d[24d[25d[26d[27d[28d[29d[30d[31d[32d[33d[34d[35d[36d[37d[38d[39d[40d[41d[42d[43d[44d[45d[46d[47d[48d[49d[50d[51d[52d7[3;53r8[53d[26S[1;55r[27;1H+@if [ $(PX4_CMAKE_GENERATOR) = "Ninja" ] && [ -e $(PWD)/build_$@/Makefile ]; then rm -rf $(PWD)/build_$@; fi[28d+@if [ ! -e $(PWD)/build_$@/CMakeCache.txt ]; then Tools/check_submodules.sh && mkdir -p $(PWD)/build_$@ && cd $(PWD)/build_$@ && cma$[29;1H+@Tools/check_submodules.sh[30d+@(echo "PX4 CONFIG: $@" && cd $(PWD)/build_$@ && $(PX4_MAKE) $(PX4_MAKE_ARGS) $(ARGS))[31dendef[33ddefine cmake-build-other[34d+@if [ $(PX4_CMAKE_GENERATOR) = "Ninja" ] && [ -e $(PWD)/build_$@/Makefile ]; then rm -rf $(PWD)/build_$@; fi[35d+@if [ ! -e $(PWD)/build_$@/CMakeCache.txt ]; then Tools/check_submodules.sh && mkdir -p $(PWD)/build_$@ && cd $(PWD)/build_$@ && cma$[36;1H+@(cd $(PWD)/build_$@ && $(PX4_MAKE) $(PX4_MAKE_ARGS) $(ARGS))[37dendef[39d# create empty targets to avoid msgs for targets passed to cmake[40ddefine cmake-targ[41d$(1):[42;9H@#[43d.PHONY: $(1)[44dendef[46ddefine colorecho[47;7H@tput setaf 6[48;7H@echo $1[49;7H@tput sgr0[50dendef[52d# ADD CONFIGS HERE[27d[28d[29d[30d[31d[32d[33d[34d[35d[36d[37d[38d[39d[40d[41d[42d[43d[44d[45d[46d[47d[48d[49d[50d[51d[52d7[3;52r8[26S[1;55r[24;29r[24;1H[3T[1;55r[24;1Hendef[26d# ADD CONFIGS HERE[27d# --------------------------------------------------------------------[28d#  Do not put any spaces between function arguments.[29daerocore-v2_default:[30;9H$(call cmake-build,nuttx_aerocore-v2_default)[32dpx4fmu-v1_default:[33;9H$(call cmake-build,nuttx_px4fmu-v1_default)[35dpx4fmu-v2_default:[36;9H$(call cmake-build,nuttx_px4fmu-v2_default)[38dpx4fmu-v2_test:[39;9H$(call cmake-build,nuttx_px4fmu-v2_test)[41dpx4fmu-v4_default:[42;9H$(call cmake-build,nuttx_px4fmu-v4_default)[44dpx4-stm32f4discovery_default:[45;9H$(call cmake-build,nuttx_px4-stm32f4discovery_default)[47dpx4fmu-v2_ekf2:[48;9H$(call cmake-build,nuttx_px4fmu-v2_ekf2)[50dmindpx-v2_default:[51;9H$(call cmake-build,nuttx_mindpx-v2_default)[27d[28d[29d[30d[31d[32d[33d[34d[35d[36d[37d[38d[39d[40d[41d[42d[43d[44d[45d[46d[47d[48d[49d[50d[51d[52d7[3;53r8[53d[26S[1;55r[27;1Hposix_sitl_default:[28;9H$(call cmake-build,$@)[30dposix_sitl_test:[31;9H$(call cmake-build,$@)[33dposix_sitl_replay:[34;9H$(call cmake-build,$@)[36dposix_sitl_broadcast:[37;9H$(call cmake-build,$@)[39dros_sitl_default:[40;9H@echo "This target is deprecated. Use make 'posix_sitl_default gazebo' instead."[42dqurt_eagle_travis:[43;9H$(call cmake-build,$@)[45dqurt_eagle_default:[46;9H$(call cmake-build,$@)[48dposix_eagle_default:[49;9H$(call cmake-build,$@)[51deagle_default: posix_eagle_default qurt_eagle_default[52deagle_legacy_default: posix_eagle_legacy_driver_default qurt_eagle_legacy_driver_default[27d[28d[29d[30d[31d[32d[33d[34d[35d[36d[37d[38d[39d[40d[41d[42d[43d[44d[45d[46d[47d[48d[49d[50d[51d[52d7[3;53r8[53d[26S[1;55r[28;1Hqurt_eagle_legacy_driver_default:[29;9H$(call cmake-build,$@)[31dposix_eagle_legacy_driver_default:[32;9H$(call cmake-build,$@)[34dqurt_excelsior_default:[35;9H$(call cmake-build,$@)[37dposix_excelsior_default:[38;9H$(call cmake-build,$@)[40dexcelsior_default: posix_excelsior_default qurt_excelsior_default[42dposix_rpi2_default:[43;9H$(call cmake-build,$@)[45dposix_rpi2_release:[46;9H$(call cmake-build,$@)[48dposix_bebop_default:[49;9H$(call cmake-build,$@)[51dposix: posix_sitl_default[27d[28d[29d[30d[31d[32d[33d[34d[35d[36d[37d[38d[39d[40d[41d[42d[43d[44d[45d[46d[47d[48d[49d[50d[51d[52d7[2;53r8[53d[26S[1;55r[2;1H[K[27dbroadcast: posix_sitl_broadcast[29dsitl_deprecation:[30;9H@echo "Deprecated. Use 'make posix_sitl_default jmavsim' or"[31;9H@echo "'make posix_sitl_default gazebo' if Gazebo is preferred."[33drun_sitl_quad: sitl_deprecation[34drun_sitl_plane: sitl_deprecation[35drun_sitl_ros: sitl_deprecation[37d# Other targets[38d# --------------------------------------------------------------------[40d.PHONY: gazebo_build uavcan_firmware check check_format unittest tests package_firmware clean submodulesclean distclean[41d.NOTPARALLEL: gazebo_build uavcan_firmware check check_format unittest tests package_firmware clean submodulesclean distclean[43dgazebo_build:[44;9H@mkdir -p build_gazebo[45;9H@if [ ! -e $(PWD)/build_gazebo/CMakeCache.txt ];then cd build_gazebo && cmake -Wno-dev -G$(PX4_CMAKE_GENERATOR) $(PWD)/Tools/$[46;9H@cd build_gazebo && $(PX4_MAKE) $(PX4_MAKE_ARGS)[47;9H@cd build_gazebo && $(PX4_MAKE) $(PX4_MAKE_ARGS) sdf[49duavcan_firmware:[50difeq ($(VECTORCONTROL),1)[51;9H$(call colorecho,"Downloading and building Vector control (FOC) firmware for the S2740VC and PX4ESC 1.6")[52;9H@(rm -rf vectorcontrol && git clone --quiet --depth 1 https://github.com/thiemar/vectorcontrol.git && cd vectorcontrol && BOA$[27;1H[28d[29d[30d[31d[32d[33d[34d[35d[36d[37d[38d[39d[40d[41d[42d[43d[44d[45d[46d[47d[48d[49d[50d[51d[52d7[2;53r8[53d[26S[1;55r[27;1Hendif[29dchecks_defaults: \[30;9Hcheck_px4fmu-v1_default \[31;9Hcheck_px4fmu-v2_default \[32;9Hcheck_mindpx-v2_default \[33;9Hcheck_px4-stm32f4discovery_default \[35dchecks_bootloaders: \[38dchecks_tests: \[39;9Hcheck_px4fmu-v2_test[41dchecks_alts: \[42;9Hcheck_px4fmu-v2_ekf2 \[44dchecks_uavcan: \[45;9Hcheck_px4fmu-v4_default_and_uavcan[47dchecks_sitls: \[48;9Hcheck_posix_sitl_default \[49;9Hcheck_posix_sitl_test \[51dchecks_last: \[52;9Hcheck_unittest \[27d[28d[29d[30d[31d[32d[33d[34d[35d[36d[37d[38d[39d[40d[41d[42d[43d[44d[45d[46d[47d[48d[49d[50d[51d[52d7[2;53r8[53d[26S[1;55r[27;9Hcheck_format \[29dcheck: checks_defaults checks_tests checks_alts checks_uavcan checks_bootloaders checks_sitls checks_last[31dcheck_format:[32;9H$(call colorecho,"Checking formatting with astyle")[33;9H@./Tools/fix_code_style.sh[34;9H@./Tools/check_code_style_all.sh[36dcheck_%:[37d@echo[38;9H$(call colorecho,"Building" $(subst check_,,$@))[39;9H@$(MAKE) --no-print-directory $(subst check_,,$@)[40;9H@echo[42dcheck_px4fmu-v4_default: uavcan_firmware[43dcheck_px4fmu-v4_default_and_uavcan: check_px4fmu-v4_default[44;9H@echo[45difeq ($(VECTORCONTROL),1)[46;9H@echo "Cleaning up vectorcontrol firmware"[47;9H@rm -rf vectorcontrol[48;9H@rm -rf ROMFS/px4fmu_common/uavcan[49dendif[51dunittest: posix_sitl_test[52;9H@export CC=clang[27d[28d[29d[30d[31d[32d[33d[34d[35d[36d[37d[38d[39d[40d[41d[42d[43d[44d[45d[46d[47d[48d[49d[50d[51d[52d7[2;53r8[53d[26S[1;55r[27;9H@export CXX=clang++[28;9H@export ASAN_OPTIONS=symbolize=1[29;9H$(call cmake-build-other,unittest, ../unittests)[30;9H@(cd build_unittest && ctest -j2 --output-on-failure)[32dtest_onboard_sitl:[33;9H@HEADLESS=1 make posix_sitl_test gazebo_iris[35dpackage_firmware:[36;9H@zip --junk-paths Firmware.zip `find . -name \*.px4`[38dclean:[39d  @rm -rf build_*/[40;9H@(cd NuttX/nuttx && make clean)[42dsubmodulesclean:[43;9H@git submodule sync --recursive[44;9H@git submodule deinit -f .[45;9H@git submodule update --init --recursive --force[47ddistclean: submodulesclean[48;9H@git clean -ff -x -d -e ".project" -e ".cproject"[50d# targets handled by cmake[51dcmake_targets = test upload package package_source debug debug_tui debug_ddd debug_io debug_io_tui debug_io_ddd check_weak \[52;9Hrun_cmake_config config gazebo gazebo_gdb gazebo_lldb jmavsim replay \[27d[28d[29d[30d[31d[32d[33d[34d[35d[36d[37d[38d[39d[40d[41d[42d[43d[44d[45d[46d[47d[48d[49d[50d[51d[52d7[3;53r8[53d[26S[1;55r[27;9Hjmavsim_gdb jmavsim_lldb gazebo_gdb_iris gazebo_lldb_tailsitter gazebo_iris gazebo_iris_opt_flow gazebo_tailsitter \[28;9Hgazebo_gdb_standard_vtol gazebo_lldb_standard_vtol gazebo_standard_vtol gazebo_plane gazebo_solo[29d$(foreach targ,$(cmake_targets),$(eval $(call cmake-targ,$(targ))))[31d.PHONY: clean[33dCONFIGS:=$(shell ls cmake/configs | sed -e "s~.*/~~" | sed -e "s~\..*~~")[35d#help:[36d#[9G@echo[37d#[9G@echo "Type 'make ' and hit the tab key twice to see a list of the available"[38d#[9G@echo "build configurations."[39d#[9G@echo[27d[28d[29d[30d[55;1H[?1049l[?1l>[?1049h[1;24r[?12l[?25h[39;49m(B[m[4l[?7h[H[2J(B[0;7m  GNU nano 2.2.6                                File: Makefile     [3;9H(B[m$(call cmake-build-other,unittest, ../unittests)[4;9H@(cd build_unittest && ctest -j2 --output-on-failure)[6dtest_onboard_sitl:[7;9H@HEADLESS=1 make posix_sitl_test gazebo_iris[9dpackage_firmware:[10;9H@zip --junk-paths Firmware.zip `find . -name \*.px4`[12dclean:[13d  @rm -rf build_*/[14;9H@(cd NuttX/nuttx && make clean)[16dsubmodulesclean:[17;9H@git submodule sync --recursive[18;9H@git submodule deinit -f .[19;9H@git submodule update --init --recursive --force[21ddistclean: submodulesclean[22;9H@git clean -ff -x -d -e ".project" -e ".cproject"[24d# targets handled by cmake[?1h=[?1h=[?1h=[H[2J(B[0;7m  GNU nano 2.2.6                                File: Makefile     [3;9H(B[m$(call cmake-build-other,unittest, ../unittests)[4;9H@(cd build_unittest && ctest -j2 --output-on-failure)[6dtest_onboard_sitl:[7;9H@HEADLESS=1 make posix_sitl_test gazebo_iris[9dpackage_firmware:[10;9H@zip --junk-paths Firmware.zip `find . -name \*.px4`[12dclean:[13d  @rm -rf build_*/[14;9H@(cd NuttX/nuttx && make clean)[16dsubmodulesclean:[17;9H@git submodule sync --recursive[18;9H@git submodule deinit -f .[19;9H@git submodule update --init --recursive --force[21ddistclean: submodulesclean[23d[1;27H(B[0;7mFile: Makefile[1;49H              [3d(B[mdistclean: submodulesclean[K[4;10Hgit clean -ff -x -d -e ".project" -e ".cproject"[K[6d# targets handled by cmake[7dcmake_targets = test upload package package_source debug debug_tui$[8;9Hrun_cmake_config config gazebo gazebo_gdb gazebo_lldb jmav$[9;8H[1K jmavsim_gdb jmavsim_lldb gazebo_gdb_iris gazebo_lldb_tails$[10;9Hgazebo_gdb_standard_vtol gazebo_lldb_standard_vtol gazebo_$[11;1H$(foreach targ,$(cmake_targets),$(eval $(call cmake-targ,$(targ))))[12;1H[K[13d.PHONY: clean[K[14d[K[15dCONFIGS:=$(shell ls cmake/configs | sed -e "s~.*/~~" | sed -e "s~\$[16;1H[K[17d#help:[K[18d#[18;10Hecho[K[19d#[19;10Hecho "Type 'make ' and hit the tab key twice to see a lis$[20;1H#[9G@echo "build configurations."[21d#       @echo[K[23d(B[0;7m^G(B[m Get Help(B[0;7m^O(B[m WriteOut(B[0;7m^R(B[m Read Fil(B[0;7m^Y(B[m Prev Pag(B[0;7m^K(B[m Cut Text(B[0;7m^C(B[m Cur Pos[24d(B[0;7m^X(B[m Exit    (B[0;7m^J(B[m Justify (B[0;7m^W(B[m Where Is(B[0;7m^V(B[m Next Pag(B[0;7m^U(B[m UnCut Te(B[0;7m^T(B[m To Spell[12d[15d[17d[18d[21d7[2;22r8[22d[10S[1;24r[12;1H[23d[J[24;67H[24;1H[?1049l[?1l>]0;jessica@mcwiljl-ll1: ~/src/Firmwarejessica@mcwiljl-ll1:~/src/Firmware$ make aerocore-v2_default [K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kexit
exit

Script done on Mon 27 Jun 2016 08:52:16 AM EDT
